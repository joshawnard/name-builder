{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport formatSelectedWords from \"../utils/formatSelectedWords\";\nimport renderFormattedWords from '../utils/renderFormattedWords';\nimport renderGenerated from \"../utils/renderGeneratedNames\";\nimport generateNames from \"../utils/generateNames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratorOutput = () => {\n  _s();\n  const {\n    rootWordsObj,\n    selectedWords\n  } = useContext(NameGeneratorContext);\n  const [formattedWordStructures, setFormattedWordStructures] = useState(formatSelectedWords(selectedWords, rootWordsObj));\n  const [generatedNames, setGeneratedNames] = useState([]);\n  useEffect(() => {\n    setFormattedWordStructures(formatSelectedWords(selectedWords, rootWordsObj));\n  }, [rootWordsObj, selectedWords]);\n  useEffect(() => {\n    setGeneratedNames(generateNames(formattedWordStructures));\n  }, [formattedWordStructures, selectedWords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"generated\",\n    children: [renderFormattedWords(formattedWordStructures), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"1rem 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), renderGenerated(generatedNames)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratorOutput, \"yDCT4if+w/C7h9blcJBP39Y6gHQ=\");\n_c = GeneratorOutput;\nexport default GeneratorOutput;\nvar _c;\n$RefreshReg$(_c, \"GeneratorOutput\");","map":{"version":3,"names":["React","useContext","useEffect","useState","NameGeneratorContext","formatSelectedWords","renderFormattedWords","renderGenerated","generateNames","GeneratorOutput","rootWordsObj","selectedWords","formattedWordStructures","setFormattedWordStructures","generatedNames","setGeneratedNames","margin"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport formatSelectedWords from \"../utils/formatSelectedWords\";\nimport { GeneratedName } from \"../interfaces/rootWordInterface\";\nimport renderFormattedWords from '../utils/renderFormattedWords';\nimport renderGenerated from \"../utils/renderGeneratedNames\";\nimport generateNames from \"../utils/generateNames\";\n\nconst GeneratorOutput = () => {\n  const { rootWordsObj, selectedWords } = useContext(NameGeneratorContext);\n  const [formattedWordStructures, setFormattedWordStructures] = useState(\n    formatSelectedWords(selectedWords, rootWordsObj),\n  );\n  const [generatedNames, setGeneratedNames] = useState<GeneratedName[]>([]);\n\n  useEffect(() => {\n    setFormattedWordStructures(\n      formatSelectedWords(selectedWords, rootWordsObj),\n    );\n  }, [rootWordsObj, selectedWords])\n\n  useEffect(() => {\n    setGeneratedNames(generateNames(formattedWordStructures));\n  }, [formattedWordStructures, selectedWords])\n\n  return (\n    <div className=\"generated\">\n      {renderFormattedWords(formattedWordStructures)}\n\n      <hr style={{ margin: \"1rem 0\" }} />\n\n      {renderGenerated(generatedNames)}\n    </div>\n  );\n};\n\nexport default GeneratorOutput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,mBAAmB,MAAM,8BAA8B;AAE9D,OAAOC,oBAAoB,MAAM,+BAA+B;AAChE,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,aAAa,MAAM,wBAAwB;AAAC;AAEnD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAM;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAGV,UAAU,CAACG,oBAAoB,CAAC;EACxE,MAAM,CAACQ,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGV,QAAQ,CACpEE,mBAAmB,CAACM,aAAa,EAAED,YAAY,CAAC,CACjD;EACD,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAkB,EAAE,CAAC;EAEzED,SAAS,CAAC,MAAM;IACdW,0BAA0B,CACxBR,mBAAmB,CAACM,aAAa,EAAED,YAAY,CAAC,CACjD;EACH,CAAC,EAAE,CAACA,YAAY,EAAEC,aAAa,CAAC,CAAC;EAEjCT,SAAS,CAAC,MAAM;IACda,iBAAiB,CAACP,aAAa,CAACI,uBAAuB,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,uBAAuB,EAAED,aAAa,CAAC,CAAC;EAE5C,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,WACvBL,oBAAoB,CAACM,uBAAuB,CAAC,eAE9C;MAAI,KAAK,EAAE;QAAEI,MAAM,EAAE;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,EAElCT,eAAe,CAACO,cAAc,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEV,CAAC;AAAC,GA1BIL,eAAe;AAAA,KAAfA,eAAe;AA4BrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}