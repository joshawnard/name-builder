{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/NameGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport WordSelectForm from \"./WordSelectForm\";\nimport GeneratorOutput from \"./GeneratorOutput\";\nimport rootWordsObj from \"../root_words/rootWords\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parseEnglishString = engString => {\n  const splitString = engString.split(\" \");\n  if (splitString[0]) {\n    if (splitString[0] === \"OE\") {\n      return splitString[1];\n    }\n    return splitString[0];\n  }\n  return engString;\n};\nconst engWordsArr = Object.keys(rootWordsObj).map(category => {\n  return {\n    [category]: rootWordsObj[category].map(rootWordObj => {\n      return parseEnglishString(rootWordObj.english);\n    })\n  };\n});\nconst NameGenerator = () => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState({});\n  const [engWords, setEngWords] = useState(engWordsArr);\n  const setNameGeneratorContext = () => {\n    return {\n      engWords,\n      rootWordsObj,\n      selectedWords,\n      setSelectedWords\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(NameGeneratorContext.Provider, {\n    value: setNameGeneratorContext(),\n    children: [/*#__PURE__*/_jsxDEV(WordSelectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        marginTop: \"1vh\",\n        marginBottom: \"1vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GeneratorOutput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NameGenerator, \"TSikrLRmYdY2VVy0zoiV0nXaFUQ=\");\n_c = NameGenerator;\nexport default NameGenerator;\nvar _c;\n$RefreshReg$(_c, \"NameGenerator\");","map":{"version":3,"names":["React","useState","NameGeneratorContext","WordSelectForm","GeneratorOutput","rootWordsObj","parseEnglishString","engString","splitString","split","engWordsArr","Object","keys","map","category","rootWordObj","english","NameGenerator","selectedWords","setSelectedWords","engWords","setEngWords","setNameGeneratorContext","marginTop","marginBottom"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/NameGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport NameGeneratorContext, { NameGeneratorContextInterface } from \"../NameGeneratorContext\";\n\nimport WordSelectForm from \"./WordSelectForm\";\n\nimport { SelectedWordsInterface } from \"../types/selectedWords\";\nimport GeneratorOutput from \"./GeneratorOutput\";\nimport rootWordsObj from \"../root_words/rootWords\";\nimport { EngWordsInterface } from \"../interfaces/rootWordInterface\";\n\nconst parseEnglishString = (engString: string): string => {\n  const splitString = engString.split(\" \");\n\n  if (splitString[0]) {\n    if (splitString[0] === \"OE\") {\n      return splitString[1];\n    }\n\n    return splitString[0];\n  }\n\n  return engString;\n};\n\nconst engWordsArr = Object.keys(rootWordsObj).map((category) => {\n  return {\n    [category]: rootWordsObj[category].map((rootWordObj) => {\n      return parseEnglishString(rootWordObj.english);\n    })\n  }\n});\n\nconst NameGenerator = () => {\n  const [selectedWords, setSelectedWords] = useState<SelectedWordsInterface>({});\n  const [engWords, setEngWords] = useState<EngWordsInterface[]>(\n    engWordsArr,\n  );\n\n  const setNameGeneratorContext = (): NameGeneratorContextInterface => {\n    return {\n      engWords,\n      rootWordsObj,\n      selectedWords,\n      setSelectedWords,\n    };\n  };\n\n  return (\n    <NameGeneratorContext.Provider value={setNameGeneratorContext()}>\n      <WordSelectForm />\n\n      <hr style={{ marginTop: \"1vh\", marginBottom: \"1vh\" }} />\n\n      <GeneratorOutput />\n    </NameGeneratorContext.Provider>\n  );\n};\n\nexport default NameGenerator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,oBAAoB,MAAyC,yBAAyB;AAE7F,OAAOC,cAAc,MAAM,kBAAkB;AAG7C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,yBAAyB;AAAC;AAGnD,MAAMC,kBAAkB,GAAIC,SAAiB,IAAa;EACxD,MAAMC,WAAW,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC;EAExC,IAAID,WAAW,CAAC,CAAC,CAAC,EAAE;IAClB,IAAIA,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;MAC3B,OAAOA,WAAW,CAAC,CAAC,CAAC;IACvB;IAEA,OAAOA,WAAW,CAAC,CAAC,CAAC;EACvB;EAEA,OAAOD,SAAS;AAClB,CAAC;AAED,MAAMG,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACP,YAAY,CAAC,CAACQ,GAAG,CAAEC,QAAQ,IAAK;EAC9D,OAAO;IACL,CAACA,QAAQ,GAAGT,YAAY,CAACS,QAAQ,CAAC,CAACD,GAAG,CAAEE,WAAW,IAAK;MACtD,OAAOT,kBAAkB,CAACS,WAAW,CAACC,OAAO,CAAC;IAChD,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAC9E,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CACtCS,WAAW,CACZ;EAED,MAAMY,uBAAuB,GAAG,MAAqC;IACnE,OAAO;MACLF,QAAQ;MACRf,YAAY;MACZa,aAAa;MACbC;IACF,CAAC;EACH,CAAC;EAED,oBACE,QAAC,oBAAoB,CAAC,QAAQ;IAAC,KAAK,EAAEG,uBAAuB,EAAG;IAAA,wBAC9D,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAElB;MAAI,KAAK,EAAE;QAAEC,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAExD,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACW;AAEpC,CAAC;AAAC,GAxBIP,aAAa;AAAA,KAAbA,aAAa;AA0BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}