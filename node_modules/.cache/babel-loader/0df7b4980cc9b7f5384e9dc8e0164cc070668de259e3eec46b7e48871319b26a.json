{"ast":null,"code":"import React from\"react\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var renderFormattedWords=function renderFormattedWords(formattedWordStructures){if(formattedWordStructures){return/*#__PURE__*/_jsx(_Fragment,{children:formattedWordStructures.map(function(formattedWord){if(formattedWord){return formattedWord.map(function(word){if(word){return Object.entries(word).map(function(list){var englishWord=list[0];// TODO: table format?\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"formatted-word\",children:[/*#__PURE__*/_jsx(\"h4\",{children:englishWord}),list[1].map(function(wordObj){if(wordObj){var language=wordObj.language,translation=wordObj.translation,englishMeaning=wordObj.englishMeaning;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[translation,\":\"]}),' ',/*#__PURE__*/_jsx(\"span\",{children:language}),' - ',/*#__PURE__*/_jsx(\"em\",{children:englishMeaning||englishWord})]},\"\".concat(translation,\"-\").concat(language));}})]},englishWord);});}});}})});}return null;};export default renderFormattedWords;","map":{"version":3,"names":["React","renderFormattedWords","formattedWordStructures","map","formattedWord","word","Object","entries","list","englishWord","wordObj","language","translation","englishMeaning"],"sources":["/Users/jard/Desktop/code/name-generator/src/utils/renderFormattedWords.tsx"],"sourcesContent":["import React from \"react\";\nimport { FormattedWordStructures } from \"../interfaces/rootWordInterface\";\n\nconst renderFormattedWords = (\n  formattedWordStructures: FormattedWordStructures,\n): JSX.Element | null => {\n  if (formattedWordStructures) {\n    return (\n      <>\n        {\n          formattedWordStructures.map((formattedWord) => {\n            if (formattedWord) {\n              return formattedWord.map((word) => {\n                if (word) {\n                  return Object.entries(word).map((list) => {\n                    const englishWord = list[0];\n\n                    // TODO: table format?\n                    return (\n                      <div\n                        className=\"formatted-word\"\n                        key={englishWord}\n                      >\n                        <h4>\n                          {englishWord}\n                        </h4>\n\n                        {\n                          list[1].map((wordObj) => {\n                            if (wordObj) {\n                              const { language, translation, englishMeaning } = wordObj;\n\n                              return (\n                                <div key={`${translation}-${language}`}>\n                                  <strong>\n                                    {translation}:\n                                  </strong>\n                                  {' '}\n                                  <span>\n                                    {language}\n                                  </span>\n                                  {' - '}\n                                  <em>\n                                    {englishMeaning || englishWord}\n                                  </em>\n                                </div>\n                              );\n                            }\n                          })\n                        }\n                      </div>\n                    );\n                  });\n                }\n              });\n            }\n          })\n        }\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default renderFormattedWords;"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CAAC,6IAG1B,GAAMC,qBAAoB,CAAG,QAAvBA,qBAAoB,CACxBC,uBAAgD,CACzB,CACvB,GAAIA,uBAAuB,CAAE,CAC3B,mBACE,yBAEIA,uBAAuB,CAACC,GAAG,CAAC,SAACC,aAAa,CAAK,CAC7C,GAAIA,aAAa,CAAE,CACjB,MAAOA,cAAa,CAACD,GAAG,CAAC,SAACE,IAAI,CAAK,CACjC,GAAIA,IAAI,CAAE,CACR,MAAOC,OAAM,CAACC,OAAO,CAACF,IAAI,CAAC,CAACF,GAAG,CAAC,SAACK,IAAI,CAAK,CACxC,GAAMC,YAAW,CAAGD,IAAI,CAAC,CAAC,CAAC,CAE3B;AACA,mBACE,aACE,SAAS,CAAC,gBAAgB,wBAG1B,oBACGC,WAAW,EACT,CAGHD,IAAI,CAAC,CAAC,CAAC,CAACL,GAAG,CAAC,SAACO,OAAO,CAAK,CACvB,GAAIA,OAAO,CAAE,CACX,GAAQC,SAAQ,CAAkCD,OAAO,CAAjDC,QAAQ,CAAEC,WAAW,CAAqBF,OAAO,CAAvCE,WAAW,CAAEC,cAAc,CAAKH,OAAO,CAA1BG,cAAc,CAE7C,mBACE,oCACE,0BACGD,WAAW,CAAC,GACf,GAAS,CACR,GAAG,cACJ,sBACGD,QAAQ,EACJ,CACN,KAAK,cACN,oBACGE,cAAc,EAAIJ,WAAW,EAC3B,aAXMG,WAAW,aAAID,QAAQ,EAY9B,CAEV,CACF,CAAC,CAAC,GA3BCF,WAAW,CA6BZ,CAEV,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,EAEH,CAEP,CAEA,MAAO,KAAI,CACb,CAAC,CAED,cAAeR,qBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}