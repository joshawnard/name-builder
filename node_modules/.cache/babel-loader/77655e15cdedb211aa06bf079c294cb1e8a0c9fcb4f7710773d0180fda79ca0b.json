{"ast":null,"code":"import _objectSpread from\"/Users/jard/Desktop/code/name-generator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useContext}from\"react\";import NameGeneratorContext from\"../NameGeneratorContext\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Settings=function Settings(){var _useContext=useContext(NameGeneratorContext),settings=_useContext.settings,setSettings=_useContext.setSettings;var handleShowFormattedWordsChange=function handleShowFormattedWordsChange(e){var checked=e.currentTarget.checked;setSettings(_objectSpread(_objectSpread({},settings),{},{showFormattedWords:checked}));};var renderShowFormattedWordsSetting=function renderShowFormattedWordsSetting(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{checked:settings.showFormattedWords,onChange:function onChange(e){return handleShowFormattedWordsChange(e);},type:\"checkbox\"}),\"Show Formatted Words\"]})});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Settings:\"}),renderShowFormattedWordsSetting()]});};export default Settings;","map":{"version":3,"names":["React","useContext","NameGeneratorContext","Settings","settings","setSettings","handleShowFormattedWordsChange","e","checked","currentTarget","showFormattedWords","renderShowFormattedWordsSetting"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx"],"sourcesContent":["import React, { ChangeEvent, useContext } from \"react\";\nimport NameGeneratorContext from \"../NameGeneratorContext\";\n\nconst Settings = () => {\n  const { settings, setSettings } = useContext(NameGeneratorContext);\n\n  const handleShowFormattedWordsChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { checked } = e.currentTarget;\n\n    setSettings({\n      ...settings,\n      showFormattedWords: checked,\n    })\n  };\n\n  const renderShowFormattedWordsSetting = () => {\n    return (\n      <>\n        <label>\n          <input\n            checked={settings.showFormattedWords}\n            onChange={(e) => handleShowFormattedWordsChange(e)}\n            type=\"checkbox\"\n          />\n\n          Show Formatted Words\n        </label>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <h2>Settings:</h2>\n\n      {renderShowFormattedWordsSetting()}\n    </>\n  );\n};\n\nexport default Settings;"],"mappings":"4HAAA,MAAOA,MAAK,EAAiBC,UAAU,KAAQ,OAAO,CACtD,MAAOC,qBAAoB,KAAM,yBAAyB,CAAC,6IAE3D,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,EAAS,CACrB,gBAAkCF,UAAU,CAACC,oBAAoB,CAAC,CAA1DE,QAAQ,aAARA,QAAQ,CAAEC,WAAW,aAAXA,WAAW,CAE7B,GAAMC,+BAA8B,CAAG,QAAjCA,+BAA8B,CAAIC,CAAgC,CAAK,CAC3E,GAAQC,QAAO,CAAKD,CAAC,CAACE,aAAa,CAA3BD,OAAO,CAEfH,WAAW,gCACND,QAAQ,MACXM,kBAAkB,CAAEF,OAAO,GAC3B,CACJ,CAAC,CAED,GAAMG,gCAA+B,CAAG,QAAlCA,gCAA+B,EAAS,CAC5C,mBACE,sCACE,sCACE,cACE,OAAO,CAAEP,QAAQ,CAACM,kBAAmB,CACrC,QAAQ,CAAE,kBAACH,CAAC,QAAKD,+BAA8B,CAACC,CAAC,CAAC,EAAC,CACnD,IAAI,CAAC,UAAU,EACf,uBAGJ,GAAQ,EACP,CAEP,CAAC,CAED,mBACE,wCACE,oBAAI,WAAS,EAAK,CAEjBI,+BAA+B,EAAE,GACjC,CAEP,CAAC,CAED,cAAeR,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}