{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-builder/src/components/WordSelectForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordSelectForm = () => {\n  _s();\n  const {\n    prefixes,\n    suffixes,\n    selectedBits,\n    setSelectedBits\n  } = useContext(NameGeneratorContext);\n  const handleCheck = (e, bit) => {\n    const {\n      currentTarget: {\n        checked\n      }\n    } = e;\n    if (checked) {\n      setSelectedBits([...selectedBits, bit]);\n    } else {\n      const index = selectedBits.indexOf(bit, 0);\n      if (index > -1) {\n        selectedBits.splice(index, 1);\n      }\n      setSelectedBits([...selectedBits]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prefixes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), prefixes.map(prefix => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              checked: selectedBits.includes(prefix),\n              name: prefix,\n              onChange: e => handleCheck(e, prefix),\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this), prefix]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Suffixes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), suffixes.map(suffix => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              checked: selectedBits.includes(suffix),\n              name: suffix,\n              onChange: e => handleCheck(e, prefix),\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), prefix]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(WordSelectForm, \"LcCSU4TPP4Tc3HLYbJWl05Di+rU=\");\n_c = WordSelectForm;\nexport default WordSelectForm;\nvar _c;\n$RefreshReg$(_c, \"WordSelectForm\");","map":{"version":3,"names":["React","useContext","NameGeneratorContext","WordSelectForm","prefixes","suffixes","selectedBits","setSelectedBits","handleCheck","e","bit","currentTarget","checked","index","indexOf","splice","map","prefix","includes","suffix"],"sources":["/Users/jard/Desktop/code/name-builder/src/components/WordSelectForm.tsx"],"sourcesContent":["import React, { ChangeEvent, useContext } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\n\nconst WordSelectForm = (): JSX.Element => {\n  const { prefixes, suffixes, selectedBits, setSelectedBits } = useContext(NameGeneratorContext);\n\n  const handleCheck = (e: ChangeEvent<HTMLInputElement>, bit: string) => {\n    const { currentTarget: { checked } } = e;\n\n    if (checked) {\n      setSelectedBits([...selectedBits, bit]);\n    } else {\n      const index = selectedBits.indexOf(bit, 0);\n\n      if (index > -1) {\n         selectedBits.splice(index, 1);\n      }\n\n      setSelectedBits([...selectedBits]);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h3>\n          Prefixes\n        </h3>\n\n        {\n          prefixes.map((prefix) => {\n            return (\n              <div>\n                <label>\n                  <input\n                    checked={selectedBits.includes(prefix)}\n                    name={prefix}\n                    onChange={(e) => handleCheck(e, prefix)}\n                    type=\"checkbox\"\n                  />\n\n                  {prefix}\n                </label>\n              </div>\n            );\n          })\n        }\n\n        <h3>\n          Suffixes\n        </h3>\n\n        {\n          suffixes.map((suffix) => {\n            return (\n              <div>\n                <label>\n                  <input\n                    checked={selectedBits.includes(suffix)}\n                    name={suffix}\n                    onChange={(e) => handleCheck(e, prefix)}\n                    type=\"checkbox\"\n                  />\n\n                  {prefix}\n                </label>\n              </div>\n            );\n          })\n        }\n\n        {/*{*/}\n        {/*  engWords.map((engWordCategory) => {*/}\n        {/*    return Object.entries(engWordCategory).map((foo) => {*/}\n        {/*      const [category, wordObjArr] = foo;*/}\n\n        {/*      return (*/}\n        {/*        <div key={category}>*/}\n        {/*          <h3>{category}</h3>*/}\n\n        {/*          {*/}\n        {/*            wordObjArr.map((word, index) => {*/}\n        {/*              if (word) {*/}\n        {/*                return (*/}\n        {/*                  <div key={`word-${index}`}>*/}\n        {/*                    <label>*/}\n        {/*                      <input*/}\n        {/*                        checked={flattenedSelectedWordList.includes(word)}*/}\n        {/*                        name={word}*/}\n        {/*                        onChange={(e) => handleCheck(e, category, word)}*/}\n        {/*                        type=\"checkbox\"*/}\n        {/*                      />*/}\n\n        {/*                      {word}*/}\n        {/*                    </label>*/}\n        {/*                  </div>*/}\n        {/*                );*/}\n        {/*              }*/}\n\n        {/*              return null;*/}\n        {/*            })*/}\n        {/*          }*/}\n        {/*        </div>*/}\n        {/*      );*/}\n        {/*    })*/}\n        {/*  })*/}\n        {/*}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default WordSelectForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAiBC,UAAU,QAAQ,OAAO;AACtD,OAAOC,oBAAoB,MAAM,yBAAyB;AAAC;AAE3D,MAAMC,cAAc,GAAG,MAAmB;EAAA;EACxC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGN,UAAU,CAACC,oBAAoB,CAAC;EAE9F,MAAMM,WAAW,GAAG,CAACC,CAAgC,EAAEC,GAAW,KAAK;IACrE,MAAM;MAAEC,aAAa,EAAE;QAAEC;MAAQ;IAAE,CAAC,GAAGH,CAAC;IAExC,IAAIG,OAAO,EAAE;MACXL,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEI,GAAG,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,MAAMG,KAAK,GAAGP,YAAY,CAACQ,OAAO,CAACJ,GAAG,EAAE,CAAC,CAAC;MAE1C,IAAIG,KAAK,GAAG,CAAC,CAAC,EAAE;QACbP,YAAY,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAChC;MAEAN,eAAe,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC;IACpC;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,UAAI;MAEJ;QAAA;QAAA;QAAA;MAAA,QAAK,EAGHF,QAAQ,CAACY,GAAG,CAAEC,MAAM,IAAK;QACvB,oBACE;UAAA,uBACE;YAAA,wBACE;cACE,OAAO,EAAEX,YAAY,CAACY,QAAQ,CAACD,MAAM,CAAE;cACvC,IAAI,EAAEA,MAAO;cACb,QAAQ,EAAGR,CAAC,IAAKD,WAAW,CAACC,CAAC,EAAEQ,MAAM,CAAE;cACxC,IAAI,EAAC;YAAU;cAAA;cAAA;cAAA;YAAA,QACf,EAEDA,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA,QACJ;MAEV,CAAC,CAAC,eAGJ;QAAA,UAAI;MAEJ;QAAA;QAAA;QAAA;MAAA,QAAK,EAGHZ,QAAQ,CAACW,GAAG,CAAEG,MAAM,IAAK;QACvB,oBACE;UAAA,uBACE;YAAA,wBACE;cACE,OAAO,EAAEb,YAAY,CAACY,QAAQ,CAACC,MAAM,CAAE;cACvC,IAAI,EAAEA,MAAO;cACb,QAAQ,EAAGV,CAAC,IAAKD,WAAW,CAACC,CAAC,EAAEQ,MAAM,CAAE;cACxC,IAAI,EAAC;YAAU;cAAA;cAAA;cAAA;YAAA,QACf,EAEDA,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA,QACJ;MAEV,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAuCA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA3GId,cAAc;AAAA,KAAdA,cAAc;AA6GpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}