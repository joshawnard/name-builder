{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-builder/src/components/GeneratorOutput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useMemo } from 'react';\nimport GridLayout from \"react-grid-layout\";\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratorOutput = () => {\n  _s();\n  const {\n    selectedBits\n    // settings: { showFormattedWords },\n  } = useContext(NameGeneratorContext);\n\n  // const layout = [\n  //   { i: \"a\", x: 0, y: 0, w: 1, h: 2, static: true },\n  //   { i: \"b\", x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\n  //   { i: \"c\", x: 4, y: 0, w: 1, h: 2 }\n  // ];\n  const layout = useMemo(() => {\n    return selectedBits.map((bit, index) => {\n      return {\n        i: bit,\n        x: 1,\n        y: index + 1,\n        w: bit.length,\n        h: 1\n        // minW: 2,\n        // maxW: 4,\n      };\n    });\n  }, [selectedBits]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bits!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridLayout, {\n      className: \"layout\",\n      layout: layout,\n      cols: 36,\n      rowHeight: 30,\n      width: 1200,\n      children: selectedBits.map(bit => {\n        console.log('arr', Array.from(Array(bit)));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bit\",\n          children: [bit.split(\"\").map((char, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: char[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 28\n            }, this);\n          }), bit]\n        }, bit, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  // return (\n  //   <>\n  //     <div\n  //       className=\"formatted-word-wrapper\"\n  //       style={formattedWordsStyle}\n  //     >\n  //       {renderFormattedWords(formattedWordStructures)}\n  //     </div>\n  //\n  //     <div\n  //       className=\"generated-names-wrapper\"\n  //       style={generatedNamesStyle}\n  //     >\n  //       {renderGenerated(generatedNames)}\n  //     </div>\n  //   </>\n  // );\n};\n_s(GeneratorOutput, \"4okem7f/lcr7nf67tWmsdv7AfuY=\");\n_c = GeneratorOutput;\nexport default GeneratorOutput;\nvar _c;\n$RefreshReg$(_c, \"GeneratorOutput\");","map":{"version":3,"names":["React","useContext","useMemo","GridLayout","NameGeneratorContext","GeneratorOutput","selectedBits","layout","map","bit","index","i","x","y","w","length","h","console","log","Array","from","split","char"],"sources":["/Users/jard/Desktop/code/name-builder/src/components/GeneratorOutput.tsx"],"sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport GridLayout from \"react-grid-layout\";\n\nimport NameGeneratorContext from \"../NameGeneratorContext\";\n\nconst GeneratorOutput = () => {\n  const {\n    selectedBits,\n    // settings: { showFormattedWords },\n  } = useContext(NameGeneratorContext);\n\n  // const layout = [\n  //   { i: \"a\", x: 0, y: 0, w: 1, h: 2, static: true },\n  //   { i: \"b\", x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\n  //   { i: \"c\", x: 4, y: 0, w: 1, h: 2 }\n  // ];\n  const layout = useMemo(() => {\n    return selectedBits.map((bit, index) => {\n      return {\n        i: bit,\n        x: 1,\n        y: index+1,\n        w: bit.length,\n        h: 1,\n        // minW: 2,\n        // maxW: 4,\n      };\n    });\n  }, [selectedBits]);\n\n  return (\n    <>\n      <h2>Bits!</h2>\n\n      <GridLayout\n        className=\"layout\"\n        layout={layout}\n        cols={36}\n        rowHeight={30}\n        width={1200}\n      >\n        {\n          selectedBits.map((bit) => {\n            console.log('arr', Array.from(Array(bit)));\n\n            return (\n              <div\n                className=\"bit\"\n                key={bit}\n              >\n                {\n                  bit.split(\"\").map((char, index) => {\n                    return <span>{char[index]}</span>\n                  })\n                }\n                {bit}\n              </div>\n            );\n          })\n        }\n      </GridLayout>\n    </>\n  );\n\n  // return (\n  //   <>\n  //     <div\n  //       className=\"formatted-word-wrapper\"\n  //       style={formattedWordsStyle}\n  //     >\n  //       {renderFormattedWords(formattedWordStructures)}\n  //     </div>\n  //\n  //     <div\n  //       className=\"generated-names-wrapper\"\n  //       style={generatedNamesStyle}\n  //     >\n  //       {renderGenerated(generatedNames)}\n  //     </div>\n  //   </>\n  // );\n};\n\nexport default GeneratorOutput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAaC,OAAO,QAAkB,OAAO;AACvE,OAAOC,UAAU,MAAM,mBAAmB;AAE1C,OAAOC,oBAAoB,MAAM,yBAAyB;AAAC;AAAA;AAE3D,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAM;IACJC;IACA;EACF,CAAC,GAAGL,UAAU,CAACG,oBAAoB,CAAC;;EAEpC;EACA;EACA;EACA;EACA;EACA,MAAMG,MAAM,GAAGL,OAAO,CAAC,MAAM;IAC3B,OAAOI,YAAY,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACtC,OAAO;QACLC,CAAC,EAAEF,GAAG;QACNG,CAAC,EAAE,CAAC;QACJC,CAAC,EAAEH,KAAK,GAAC,CAAC;QACVI,CAAC,EAAEL,GAAG,CAACM,MAAM;QACbC,CAAC,EAAE;QACH;QACA;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACV,YAAY,CAAC,CAAC;EAElB,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eAEd,QAAC,UAAU;MACT,SAAS,EAAC,QAAQ;MAClB,MAAM,EAAEC,MAAO;MACf,IAAI,EAAE,EAAG;MACT,SAAS,EAAE,EAAG;MACd,KAAK,EAAE,IAAK;MAAA,UAGVD,YAAY,CAACE,GAAG,CAAEC,GAAG,IAAK;QACxBQ,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACV,GAAG,CAAC,CAAC,CAAC;QAE1C,oBACE;UACE,SAAS,EAAC,KAAK;UAAA,WAIbA,GAAG,CAACY,KAAK,CAAC,EAAE,CAAC,CAACb,GAAG,CAAC,CAACc,IAAI,EAAEZ,KAAK,KAAK;YACjC,oBAAO;cAAA,UAAOY,IAAI,CAACZ,KAAK;YAAC;cAAA;cAAA;cAAA;YAAA,QAAQ;UACnC,CAAC,CAAC,EAEHD,GAAG;QAAA,GAPCA,GAAG;UAAA;UAAA;UAAA;QAAA,QAQJ;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEO;EAAA,gBACZ;;EAGL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,GA5EIJ,eAAe;AAAA,KAAfA,eAAe;AA8ErB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}