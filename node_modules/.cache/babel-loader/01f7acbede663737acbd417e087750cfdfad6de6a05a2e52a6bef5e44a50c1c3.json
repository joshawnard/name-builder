{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport roots from \"../root_words\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratorOutput = () => {\n  _s();\n  const {\n    selectedWords\n  } = useContext(NameGeneratorContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(selectedWords).map(selectedWord => {\n      const type = selectedWord[0];\n      const list = selectedWord[1];\n      if (list.length) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: list.map(word => {\n            console.log(roots[type]);\n            console.log(roots);\n            if (roots[type]) {\n              Object.entries(roots[type]).map(wordName => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: wordName[0]\n                }, wordName[0], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 27\n                }, this);\n              });\n            }\n          })\n        }, void 0, false);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneratorOutput, \"c4vNfki0qWzfuBjM8AK8DZwwLmo=\");\n_c = GeneratorOutput;\nexport default GeneratorOutput;\nvar _c;\n$RefreshReg$(_c, \"GeneratorOutput\");","map":{"version":3,"names":["React","useContext","NameGeneratorContext","roots","GeneratorOutput","selectedWords","Object","entries","map","selectedWord","type","list","length","word","console","log","wordName"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport roots from \"../root_words\";\n\nconst GeneratorOutput = () => {\n  const { selectedWords } = useContext(NameGeneratorContext);\n\n  return (\n    <div>\n      {\n        Object.entries(selectedWords).map((selectedWord) => {\n          const type = selectedWord[0];\n          const list = selectedWord[1];\n\n          if (list.length) {\n            return (\n              <>\n                {\n                  list.map((word) => {\n                    console.log(roots[type])\n                    console.log(roots)\n\n                    if (roots[type]) {\n                      Object.entries(roots[type]).map((wordName) => {\n                        return (\n                          <div key={wordName[0]}>\n                            {wordName[0]}\n                          </div>\n                        );\n                      })\n                    }\n                  })\n                }\n              </>\n            );\n          }\n        })\n      }\n    </div>\n  );\n};\n\nexport default GeneratorOutput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,KAAK,MAAM,eAAe;AAAC;AAAA;AAElC,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAM;IAAEC;EAAc,CAAC,GAAGJ,UAAU,CAACC,oBAAoB,CAAC;EAE1D,oBACE;IAAA,UAEII,MAAM,CAACC,OAAO,CAACF,aAAa,CAAC,CAACG,GAAG,CAAEC,YAAY,IAAK;MAClD,MAAMC,IAAI,GAAGD,YAAY,CAAC,CAAC,CAAC;MAC5B,MAAME,IAAI,GAAGF,YAAY,CAAC,CAAC,CAAC;MAE5B,IAAIE,IAAI,CAACC,MAAM,EAAE;QACf,oBACE;UAAA,UAEID,IAAI,CAACH,GAAG,CAAEK,IAAI,IAAK;YACjBC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAACO,IAAI,CAAC,CAAC;YACxBI,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;YAElB,IAAIA,KAAK,CAACO,IAAI,CAAC,EAAE;cACfJ,MAAM,CAACC,OAAO,CAACJ,KAAK,CAACO,IAAI,CAAC,CAAC,CAACF,GAAG,CAAEQ,QAAQ,IAAK;gBAC5C,oBACE;kBAAA,UACGA,QAAQ,CAAC,CAAC;gBAAC,GADJA,QAAQ,CAAC,CAAC,CAAC;kBAAA;kBAAA;kBAAA;gBAAA,QAEf;cAEV,CAAC,CAAC;YACJ;UACF,CAAC;QAAC,iBAEH;MAEP;IACF,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAEA;AAEV,CAAC;AAAC,GApCIZ,eAAe;AAAA,KAAfA,eAAe;AAsCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}