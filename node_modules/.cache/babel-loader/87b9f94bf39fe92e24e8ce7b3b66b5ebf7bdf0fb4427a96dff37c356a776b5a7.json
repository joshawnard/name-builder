{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport formatSelectedWords from \"../utils/formatSelectedWords\";\nimport renderFormattedWords from '../utils/renderFormattedWords';\nimport renderGenerated from \"../utils/renderGeneratedNames\";\nimport generateNames from \"../utils/generateNames\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratorOutput = () => {\n  _s();\n  const {\n    rootWordsObj,\n    selectedWords,\n    settings: {\n      showFormattedWords\n    }\n  } = useContext(NameGeneratorContext);\n  const [formattedWordStructures, setFormattedWordStructures] = useState(formatSelectedWords(selectedWords, rootWordsObj));\n  const [generatedNames, setGeneratedNames] = useState([]);\n  useEffect(() => {\n    setFormattedWordStructures(formatSelectedWords(selectedWords, rootWordsObj));\n  }, [rootWordsObj, selectedWords]);\n  useEffect(() => {\n    setGeneratedNames(generateNames(formattedWordStructures));\n  }, [formattedWordStructures, selectedWords]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderFormattedWords(formattedWordStructures), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"1rem 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), renderGenerated(generatedNames)]\n  }, void 0, true);\n};\n_s(GeneratorOutput, \"tcqqK/xDHmdj7+hwMZqI/DecLZk=\");\n_c = GeneratorOutput;\nexport default GeneratorOutput;\nvar _c;\n$RefreshReg$(_c, \"GeneratorOutput\");","map":{"version":3,"names":["React","useContext","useEffect","useState","NameGeneratorContext","formatSelectedWords","renderFormattedWords","renderGenerated","generateNames","GeneratorOutput","rootWordsObj","selectedWords","settings","showFormattedWords","formattedWordStructures","setFormattedWordStructures","generatedNames","setGeneratedNames","margin"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport formatSelectedWords from \"../utils/formatSelectedWords\";\nimport { GeneratedName } from \"../interfaces/rootWordInterface\";\nimport renderFormattedWords from '../utils/renderFormattedWords';\nimport renderGenerated from \"../utils/renderGeneratedNames\";\nimport generateNames from \"../utils/generateNames\";\n\nconst GeneratorOutput = () => {\n  const {\n    rootWordsObj,\n    selectedWords,\n    settings: { showFormattedWords },\n  } = useContext(NameGeneratorContext);\n  const [formattedWordStructures, setFormattedWordStructures] = useState(\n    formatSelectedWords(selectedWords, rootWordsObj),\n  );\n  const [generatedNames, setGeneratedNames] = useState<GeneratedName[]>([]);\n\n  useEffect(() => {\n    setFormattedWordStructures(\n      formatSelectedWords(selectedWords, rootWordsObj),\n    );\n  }, [rootWordsObj, selectedWords])\n\n  useEffect(() => {\n    setGeneratedNames(generateNames(formattedWordStructures));\n  }, [formattedWordStructures, selectedWords])\n\n  return (\n    <>\n      {renderFormattedWords(formattedWordStructures)}\n\n      <hr style={{ margin: \"1rem 0\" }} />\n\n      {renderGenerated(generatedNames)}\n    </>\n  );\n};\n\nexport default GeneratorOutput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,mBAAmB,MAAM,8BAA8B;AAE9D,OAAOC,oBAAoB,MAAM,+BAA+B;AAChE,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,aAAa,MAAM,wBAAwB;AAAC;AAAA;AAEnD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC5B,MAAM;IACJC,YAAY;IACZC,aAAa;IACbC,QAAQ,EAAE;MAAEC;IAAmB;EACjC,CAAC,GAAGZ,UAAU,CAACG,oBAAoB,CAAC;EACpC,MAAM,CAACU,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGZ,QAAQ,CACpEE,mBAAmB,CAACM,aAAa,EAAED,YAAY,CAAC,CACjD;EACD,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAkB,EAAE,CAAC;EAEzED,SAAS,CAAC,MAAM;IACda,0BAA0B,CACxBV,mBAAmB,CAACM,aAAa,EAAED,YAAY,CAAC,CACjD;EACH,CAAC,EAAE,CAACA,YAAY,EAAEC,aAAa,CAAC,CAAC;EAEjCT,SAAS,CAAC,MAAM;IACde,iBAAiB,CAACT,aAAa,CAACM,uBAAuB,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,uBAAuB,EAAEH,aAAa,CAAC,CAAC;EAE5C,oBACE;IAAA,WACGL,oBAAoB,CAACQ,uBAAuB,CAAC,eAE9C;MAAI,KAAK,EAAE;QAAEI,MAAM,EAAE;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,EAElCX,eAAe,CAACS,cAAc,CAAC;EAAA,gBAC/B;AAEP,CAAC;AAAC,GA9BIP,eAAe;AAAA,KAAfA,eAAe;AAgCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}