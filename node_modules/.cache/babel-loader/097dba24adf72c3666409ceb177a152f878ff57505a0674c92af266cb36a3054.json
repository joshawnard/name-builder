{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    settings\n  } = useContext(NameGeneratorContext);\n  const handleShowFormattedWordsChange = () => {};\n  const renderShowFormattedWordsSetting = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          checked: settings.showFormattedWords,\n          onChange: handleShowFormattedWordsChange,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), \"Show Formatted Words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Settings:\", renderShowFormattedWordsSetting()]\n  }, void 0, true);\n};\n_s(Settings, \"69FWSsL9kAV4r+Khoh+qYc0B6t0=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useContext","NameGeneratorContext","Settings","settings","handleShowFormattedWordsChange","renderShowFormattedWordsSetting","showFormattedWords"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport NameGeneratorContext from \"../NameGeneratorContext\";\n\nconst Settings = () => {\n  const { settings } = useContext(NameGeneratorContext);\n\n  const handleShowFormattedWordsChange = () => {\n\n  };\n\n  const renderShowFormattedWordsSetting = () => {\n    return (\n      <>\n        <label>\n          <input\n            checked={settings.showFormattedWords}\n            onChange={handleShowFormattedWordsChange}\n            type=\"checkbox\"\n          />\n\n          Show Formatted Words\n        </label>\n      </>\n    );\n  };\n\n  return (\n    <>\n      Settings:\n      {renderShowFormattedWordsSetting()}\n    </>\n  );\n};\n\nexport default Settings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,oBAAoB,MAAM,yBAAyB;AAAC;AAAA;AAE3D,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGH,UAAU,CAACC,oBAAoB,CAAC;EAErD,MAAMG,8BAA8B,GAAG,MAAM,CAE7C,CAAC;EAED,MAAMC,+BAA+B,GAAG,MAAM;IAC5C,oBACE;MAAA,uBACE;QAAA,wBACE;UACE,OAAO,EAAEF,QAAQ,CAACG,kBAAmB;UACrC,QAAQ,EAAEF,8BAA+B;UACzC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QACf,wBAGJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAAQ,iBACP;EAEP,CAAC;EAED,oBACE;IAAA,WAAE,WAEA,EAACC,+BAA+B,EAAE;EAAA,gBACjC;AAEP,CAAC;AAAC,GA7BIH,QAAQ;AAAA,KAARA,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}