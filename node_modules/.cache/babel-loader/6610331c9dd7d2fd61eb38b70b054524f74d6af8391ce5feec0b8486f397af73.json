{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/NameGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport WordSelectForm from \"./WordSelectForm\";\nimport GeneratorOutput from \"./GeneratorOutput\";\nimport rootWordsObj from \"../root_words/rootWords\";\nimport Settings from \"./Settings\";\nimport parseEnglishString from \"../utils/parseEnglishString\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst engWordsArr = Object.keys(rootWordsObj).map(category => {\n  return {\n    [category]: rootWordsObj[category].map(rootWordObj => {\n      return parseEnglishString(rootWordObj.english);\n    })\n  };\n});\n\n// TODO: features\n// min roots for construction\n// max roots for construction\n\nconst NameGenerator = () => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState({});\n  const [engWords, setEngWords] = useState(engWordsArr);\n  const [settings, setSettings] = useState({\n    showFormattedWords: true\n  });\n  const setNameGeneratorContext = () => {\n    return {\n      engWords,\n      rootWordsObj,\n      selectedWords,\n      setSelectedWords,\n      settings,\n      setSettings\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(NameGeneratorContext.Provider, {\n    value: setNameGeneratorContext(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-select\",\n        children: /*#__PURE__*/_jsxDEV(WordSelectForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated\",\n        children: /*#__PURE__*/_jsxDEV(GeneratorOutput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NameGenerator, \"/3QNly7nzxGR1lhY4XE9Rai6yi8=\");\n_c = NameGenerator;\nexport default NameGenerator;\nvar _c;\n$RefreshReg$(_c, \"NameGenerator\");","map":{"version":3,"names":["React","useState","NameGeneratorContext","WordSelectForm","GeneratorOutput","rootWordsObj","Settings","parseEnglishString","engWordsArr","Object","keys","map","category","rootWordObj","english","NameGenerator","selectedWords","setSelectedWords","engWords","setEngWords","settings","setSettings","showFormattedWords","setNameGeneratorContext"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/NameGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport NameGeneratorContext, { NameGeneratorContextInterface } from \"../NameGeneratorContext\";\n\nimport WordSelectForm from \"./WordSelectForm\";\n\nimport { SelectedWordsInterface } from \"../types/selectedWords\";\nimport GeneratorOutput from \"./GeneratorOutput\";\nimport rootWordsObj from \"../root_words/rootWords\";\nimport { EngWordsInterface } from \"../interfaces/rootWordInterface\";\nimport { SettingsInterface } from \"../interfaces/settingsInterfaces\";\nimport Settings from \"./Settings\";\nimport parseEnglishString from \"../utils/parseEnglishString\";\n\nconst engWordsArr = Object.keys(rootWordsObj).map((category) => {\n  return {\n    [category]: rootWordsObj[category].map((rootWordObj) => {\n      return parseEnglishString(rootWordObj.english);\n    })\n  }\n});\n\n// TODO: features\n// min roots for construction\n// max roots for construction\n\nconst NameGenerator = () => {\n  const [selectedWords, setSelectedWords] = useState<SelectedWordsInterface>({});\n  const [engWords, setEngWords] = useState<EngWordsInterface[]>(\n    engWordsArr,\n  );\n  const [settings, setSettings] = useState<SettingsInterface>({\n    showFormattedWords: true,\n  })\n\n  const setNameGeneratorContext = (): NameGeneratorContextInterface => {\n    return {\n      engWords,\n      rootWordsObj,\n      selectedWords,\n      setSelectedWords,\n      settings,\n      setSettings,\n    };\n  };\n\n  return (\n    <NameGeneratorContext.Provider value={setNameGeneratorContext()}>\n      <div className=\"settings\">\n        <Settings />\n      </div>\n\n      <div className=\"page-wrapper\">\n        <div className=\"word-select\">\n          <WordSelectForm />\n        </div>\n\n        <div className=\"generated\">\n          <GeneratorOutput />\n        </div>\n      </div>\n    </NameGeneratorContext.Provider>\n  );\n};\n\nexport default NameGenerator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,oBAAoB,MAAyC,yBAAyB;AAE7F,OAAOC,cAAc,MAAM,kBAAkB;AAG7C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,yBAAyB;AAGlD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,kBAAkB,MAAM,6BAA6B;AAAC;AAE7D,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACL,YAAY,CAAC,CAACM,GAAG,CAAEC,QAAQ,IAAK;EAC9D,OAAO;IACL,CAACA,QAAQ,GAAGP,YAAY,CAACO,QAAQ,CAAC,CAACD,GAAG,CAAEE,WAAW,IAAK;MACtD,OAAON,kBAAkB,CAACM,WAAW,CAACC,OAAO,CAAC;IAChD,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAC9E,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CACtCO,WAAW,CACZ;EACD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAoB;IAC1DqB,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEF,MAAMC,uBAAuB,GAAG,MAAqC;IACnE,OAAO;MACLL,QAAQ;MACRb,YAAY;MACZW,aAAa;MACbC,gBAAgB;MAChBG,QAAQ;MACRC;IACF,CAAC;EACH,CAAC;EAED,oBACE,QAAC,oBAAoB,CAAC,QAAQ;IAAC,KAAK,EAAEE,uBAAuB,EAAG;IAAA,wBAC9D;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACR,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAK,SAAS,EAAC,aAAa;QAAA,uBAC1B,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACd,eAEN;QAAK,SAAS,EAAC,WAAW;QAAA,uBACxB,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACf;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACwB;AAEpC,CAAC;AAAC,GArCIR,aAAa;AAAA,KAAbA,aAAa;AAuCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}