{"ast":null,"code":"import _defineProperty from\"/Users/jard/Desktop/code/name-generator/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import parseDataString from\"./parseDataString\";var formatSelectedWords=function formatSelectedWords(selectedWords,rootWordsObj){var selectedEntries=Object.entries(selectedWords);if(selectedEntries.length){return Object.entries(selectedWords).map(function(selectedWord){var type=selectedWord[0];var list=selectedWord[1];if(list.length){return list.map(function(word){var theOne=rootWordsObj[type].find(function(rootWordObj){var _rootWordObj$english;return(_rootWordObj$english=rootWordObj.english)===null||_rootWordObj$english===void 0?void 0:_rootWordObj$english.includes(word);});if(theOne){return _defineProperty({},word,Object.entries(theOne).map(function(entry){var parsedWordAndLanguage=parseDataString(entry[1],entry[0]);if(parsedWordAndLanguage){return parsedWordAndLanguage;}return undefined;}));}return undefined;});}return undefined;});}return null;};export default formatSelectedWords;","map":{"version":3,"names":["parseDataString","formatSelectedWords","selectedWords","rootWordsObj","selectedEntries","Object","entries","length","map","selectedWord","type","list","word","theOne","find","rootWordObj","english","includes","entry","parsedWordAndLanguage","undefined"],"sources":["/Users/jard/Desktop/code/name-generator/src/utils/formatSelectedWords.ts"],"sourcesContent":["import { SelectedWordsInterface } from \"../types/selectedWords\";\nimport { RootWordsObjInterface } from \"../interfaces/rootWordInterface\";\nimport parseDataString from \"./parseDataString\";\n\nconst formatSelectedWords = (\n  selectedWords: SelectedWordsInterface,\n  rootWordsObj: RootWordsObjInterface,\n) => {\n  const selectedEntries = Object.entries(selectedWords);\n\n  if (selectedEntries.length) {\n    return Object.entries(selectedWords).map((selectedWord) => {\n      const type = selectedWord[0];\n      const list = selectedWord[1];\n\n      if (list.length) {\n        return list.map((word) => {\n          const theOne = rootWordsObj[type].find((rootWordObj) => {\n            return rootWordObj.english?.includes(word);\n          });\n\n          if (theOne) {\n            return {\n              [word]: Object.entries(theOne).map((entry) => {\n                const parsedWordAndLanguage = parseDataString(entry[1], entry[0]);\n\n                if (parsedWordAndLanguage) {\n                  return parsedWordAndLanguage;\n                }\n\n                return undefined;\n              }),\n            };\n          }\n\n          return undefined;\n        })\n      }\n\n      return undefined;\n    });\n  }\n\n  return null;\n};\n\nexport default formatSelectedWords;"],"mappings":"+HAEA,MAAOA,gBAAe,KAAM,mBAAmB,CAE/C,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAmB,CACvBC,aAAqC,CACrCC,YAAmC,CAChC,CACH,GAAMC,gBAAe,CAAGC,MAAM,CAACC,OAAO,CAACJ,aAAa,CAAC,CAErD,GAAIE,eAAe,CAACG,MAAM,CAAE,CAC1B,MAAOF,OAAM,CAACC,OAAO,CAACJ,aAAa,CAAC,CAACM,GAAG,CAAC,SAACC,YAAY,CAAK,CACzD,GAAMC,KAAI,CAAGD,YAAY,CAAC,CAAC,CAAC,CAC5B,GAAME,KAAI,CAAGF,YAAY,CAAC,CAAC,CAAC,CAE5B,GAAIE,IAAI,CAACJ,MAAM,CAAE,CACf,MAAOI,KAAI,CAACH,GAAG,CAAC,SAACI,IAAI,CAAK,CACxB,GAAMC,OAAM,CAAGV,YAAY,CAACO,IAAI,CAAC,CAACI,IAAI,CAAC,SAACC,WAAW,CAAK,0BACtD,4BAAOA,WAAW,CAACC,OAAO,+CAAnB,qBAAqBC,QAAQ,CAACL,IAAI,CAAC,CAC5C,CAAC,CAAC,CAEF,GAAIC,MAAM,CAAE,CACV,0BACGD,IAAI,CAAGP,MAAM,CAACC,OAAO,CAACO,MAAM,CAAC,CAACL,GAAG,CAAC,SAACU,KAAK,CAAK,CAC5C,GAAMC,sBAAqB,CAAGnB,eAAe,CAACkB,KAAK,CAAC,CAAC,CAAC,CAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAEjE,GAAIC,qBAAqB,CAAE,CACzB,MAAOA,sBAAqB,CAC9B,CAEA,MAAOC,UAAS,CAClB,CAAC,CAAC,EAEN,CAEA,MAAOA,UAAS,CAClB,CAAC,CAAC,CACJ,CAEA,MAAOA,UAAS,CAClB,CAAC,CAAC,CACJ,CAEA,MAAO,KAAI,CACb,CAAC,CAED,cAAenB,oBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}