{"ast":null,"code":"import _objectSpread from\"/Users/jard/Desktop/code/name-generator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import getWordsInQuotes from\"./getWordsInQuotes\";import removeExtraChars from\"./removeExtraChars\";var parseDataString=function parseDataString(dataString,language){if(dataString){var splitString=dataString.split(\" \");// TODO: split by language strings?\n// If celtic split by OIr or W?\n// Maybe leave this as a later feature?\nvar defaultLanguageAndWord={language:language,translation:splitString[1],englishMeaning:getWordsInQuotes(dataString)};var languageAndWord={language:language,translation:splitString[0],englishMeaning:getWordsInQuotes(dataString)};switch(language){case\"ancient greek\":if([\"Att\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"attic greek\"});}if([\"Pamphylian\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"pamphylian\"});}if([\"Doric\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"doric\"});}if([\"Myc\",\"MycGr\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"mycenaean\"});}if([\"Homeric\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"homeric greek\"});}break;case\"albanian\":if([\"Gheg\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"albanian (gheg)\"});}if([\"OldTosk\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"albanian (old tosk)\"});}if([\"Tosk\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"albanian (tosk)\"});}break;case\"armenian\":if([\"OArm\",\"OldArm\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"classical armenian\"});}break;case\"baltic\":if([\"OPrus\",\"OP\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old prussian\"});}if([\"Lith\",\"OLith\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"lithuanian\"});}if([\"Latv\",\"Latvian\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"latvian\"});}break;case\"celtic\":if([\"Irsh\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"irish\"});}if([\"Celtib\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"celtiberian\"});}if([\"OIr\",\"OI\",\"Old Irish\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old irish\"});}if([\"MIr\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"middle irish\"});}if([\"Gaul\",\"Gaul.\",\"Gaulish\",\"Gau\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"gaulish\"});}if([\"W\",\"NWel\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"welsh\"});}if([\"MWel\",\"MW\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"middle welsh\"});}if([\"MBret\",\"Bret\",\"Bre\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"breton\"});}break;case\"english\":if([\"OE\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old english\"});}if([\"Scot\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"scottish english\"});}break;case\"gothic\":if([\"ON\",\"Nor\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old norse\"});}if([\"OHG\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old high german\"});}if([\"Ger\",\"German\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"german\"});}if([\"OldSaxon\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old saxon\"});}if([\"Yiddish\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"yiddish\"});}break;case\"hittite\":if([\"Luwian\",\"HLuw\",\"Luw\",\"HierLuv\",\"Luvian\",\"CLuw\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"luwian\"});}if([\"Hitt\",\"Hitt.\",\"Hittite\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"hittite\"});}if([\"Lydian\",\"Lyd\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"lydian\"});}if([\"Lyc\"].includes(splitString[0])){languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"lycian\"});}break;case\"iranian\":if([\"YAv\",\"Av\",\"Avestan\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"avestan\"});}if([\"Wakhi\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"Wakhi\"});}if([\"Sogdian\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"sogdian\"});}if([\"Kurdish\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"kurdish\"});}if([\"Ossetic\",\"Oss\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"ossetian\"});}if(splitString[0]===\"Old\"){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old iranian\",translation:splitString[2]});}if(splitString[0]===\"Proto-Iranian\"){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"proto-iranian\"});}if([\"NPers\",\"Npers\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"dari, new persian\"});}if([\"Persian\",\"Per\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"persian\"});}if([\"OPers\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old persian\"});}if([\"Pash\",\"Past\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"pashto\"});}break;case\"latin\":if([\"Osc\",\"Oscan\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"oscan\"});}if([\"Proto-Italic\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"proto-italic\"});}if([\"Umbrian\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"umbrian\"});}break;case\"pie\":if(language===\"pie\"){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{translation:splitString[0],language:\"proto indo european\"});}break;case\"sanskrit\":if([\"Ved\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"vedic\"});}break;case\"slavic\":if([\"OCS\",\"OSl\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old church slavonic\"});}if([\"OldSorbian\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"old sorbian\"});}if([\"Russ\",\"Russ.\",\"Russian\",\"Rus\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"russian\"});}if([\"Croatian\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"croatian\"});}if([\"Czech\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"czech\"});}if([\"Bulg\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"bulgarian\"});}if([\"MBulg\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"middle bulgarian\"});}if([\"Ukr\",\"Ukrainian\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"ukranian\"});}if([\"Pol\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"polish\"});}if([\"Belar\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"belarusian\"});}break;case\"tocharian\":if(splitString[0]===\"A\"){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"tocharian A\"});}if(splitString[0]===\"B\"){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"tocharian B\"});}if([\"AB\",\"A/B\"].includes(splitString[0])){languageAndWord=languageAndWord=_objectSpread(_objectSpread({},defaultLanguageAndWord),{},{language:\"tocharian A/B\"});}break;default:languageAndWord={language:language,translation:splitString[0],englishMeaning:getWordsInQuotes(dataString)};break;}return{language:removeExtraChars(languageAndWord.language),translation:removeExtraChars(languageAndWord.translation),// translation: removeExtraChars(languageAndWord.translation).toLowerCase(),\nenglishMeaning:languageAndWord.englishMeaning};}return undefined;};export default parseDataString;","map":{"version":3,"names":["getWordsInQuotes","removeExtraChars","parseDataString","dataString","language","splitString","split","defaultLanguageAndWord","translation","englishMeaning","languageAndWord","includes","undefined"],"sources":["/Users/jard/Desktop/code/name-generator/src/utils/parseDataString.ts"],"sourcesContent":["import {\n  ParsedRootInterface\n} from \"../interfaces/rootWordInterface\";\nimport getWordsInQuotes from \"./getWordsInQuotes\";\nimport removeExtraChars from \"./removeExtraChars\";\n\nconst parseDataString = (\n  dataString: string | undefined,\n  language: string,\n): ParsedRootInterface | undefined => {\n  if (dataString) {\n    const splitString = dataString.split(\" \");\n    // TODO: split by language strings?\n    // If celtic split by OIr or W?\n    // Maybe leave this as a later feature?\n\n    const defaultLanguageAndWord = {\n      language: language,\n      translation: splitString[1],\n      englishMeaning: getWordsInQuotes(dataString),\n    }\n\n    let languageAndWord: ParsedRootInterface = {\n      language: language,\n      translation: splitString[0],\n      englishMeaning: getWordsInQuotes(dataString),\n    };\n\n    switch (language) {\n      case \"ancient greek\":\n        if ([\"Att\"].includes(splitString[0])) {\n           languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"attic greek\",\n          }\n        }\n\n        if ([\"Pamphylian\"].includes(splitString[0])) {\n           languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"pamphylian\",\n          }\n        }\n\n        if ([\"Doric\"].includes(splitString[0])) {\n           languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"doric\",\n          }\n        }\n\n        if ([\"Myc\", \"MycGr\"].includes(splitString[0])) {\n           languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"mycenaean\",\n          }\n        }\n\n        if ([\"Homeric\"].includes(splitString[0])) {\n           languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"homeric greek\",\n          }\n        }\n\n        break;\n\n      case \"albanian\":\n        if ([\"Gheg\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"albanian (gheg)\",\n          }\n        }\n\n        if ([\"OldTosk\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"albanian (old tosk)\",\n          }\n        }\n\n        if ([\"Tosk\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"albanian (tosk)\",\n          }\n        }\n\n        break;\n\n      case \"armenian\":\n        if ([\"OArm\", \"OldArm\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"classical armenian\",\n          }\n        }\n\n        break;\n\n\n      case \"baltic\":\n        if ([\"OPrus\", \"OP\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old prussian\",\n          }\n        }\n\n        if ([\"Lith\", \"OLith\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"lithuanian\",\n          }\n        }\n\n        if ([\"Latv\", \"Latvian\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"latvian\",\n          }\n        }\n\n        break;\n\n      case \"celtic\":\n        if ([\"Irsh\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"irish\",\n          }\n        }\n\n        if ([\"Celtib\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"celtiberian\",\n          }\n        }\n\n        if ([\"OIr\", \"OI\", \"Old Irish\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old irish\",\n          }\n        }\n\n        if ([\"MIr\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"middle irish\",\n          }\n        }\n\n        if ([\"Gaul\", \"Gaul.\", \"Gaulish\", \"Gau\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"gaulish\",\n          }\n        }\n\n        if ([\"W\", \"NWel\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"welsh\",\n          }\n        }\n\n        if ([\"MWel\", \"MW\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"middle welsh\",\n          }\n        }\n\n        if ([\"MBret\", \"Bret\", \"Bre\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"breton\",\n          }\n        }\n\n        break;\n\n      case \"english\":\n        if ([\"OE\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old english\",\n          }\n        }\n\n        if ([\"Scot\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"scottish english\",\n          }\n        }\n\n        break;\n\n      case \"gothic\":\n        if ([\"ON\", \"Nor\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old norse\",\n          }\n        }\n\n        if ([\"OHG\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old high german\",\n          }\n        }\n\n        if ([\"Ger\", \"German\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"german\",\n          }\n        }\n\n        if ([\"OldSaxon\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old saxon\",\n          }\n        }\n\n        if ([\"Yiddish\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"yiddish\",\n          }\n        }\n\n        break;\n\n      case \"hittite\":\n        if ([\"Luwian\", \"HLuw\", \"Luw\", \"HierLuv\", \"Luvian\", \"CLuw\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"luwian\",\n          }\n        }\n\n        if ([\"Hitt\", \"Hitt.\", \"Hittite\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"hittite\",\n          }\n        }\n\n        if ([\"Lydian\", \"Lyd\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"lydian\",\n          }\n        }\n\n        if ([ \"Lyc\"].includes(splitString[0])) {\n          languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"lycian\",\n          }\n        }\n\n        break;\n\n      case \"iranian\":\n        if ([\"YAv\", \"Av\", \"Avestan\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"avestan\",\n          }\n        }\n\n        if ([\"Wakhi\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"Wakhi\",\n          }\n        }\n\n        if ([\"Sogdian\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"sogdian\",\n          }\n        }\n\n        if ([\"Kurdish\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"kurdish\",\n          }\n        }\n\n        if ([\"Ossetic\", \"Oss\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"ossetian\",\n          }\n        }\n\n        if (splitString[0] === \"Old\") {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old iranian\",\n            translation: splitString[2],\n          }\n        }\n\n        if (splitString[0] === \"Proto-Iranian\") {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"proto-iranian\",\n          }\n        }\n\n        if ([\"NPers\", \"Npers\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"dari, new persian\",\n          }\n        }\n\n        if ([\"Persian\", \"Per\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"persian\",\n          }\n        }\n\n        if ([\"OPers\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old persian\",\n          }\n        }\n\n        if ([\"Pash\", \"Past\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"pashto\",\n          }\n        }\n\n        break;\n\n      case \"latin\":\n        if ([\"Osc\", \"Oscan\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"oscan\",\n          }\n        }\n\n        if ([\"Proto-Italic\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"proto-italic\",\n          }\n        }\n\n        if ([\"Umbrian\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"umbrian\",\n          }\n        }\n\n        break;\n\n      case \"pie\":\n        if (language === \"pie\") {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            translation: splitString[0],\n            language: \"proto indo european\",\n          }\n        }\n\n        break;\n\n      case \"sanskrit\":\n        if ([\"Ved\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"vedic\",\n          }\n        }\n\n        break;\n\n      case \"slavic\":\n        if ([\"OCS\", \"OSl\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old church slavonic\",\n          }\n        }\n\n        if ([\"OldSorbian\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"old sorbian\",\n          }\n        }\n\n        if ([\"Russ\", \"Russ.\", \"Russian\", \"Rus\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"russian\",\n          }\n        }\n\n        if ([\"Croatian\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"croatian\",\n          }\n        }\n\n        if ([\"Czech\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"czech\",\n          }\n        }\n\n        if ([\"Bulg\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"bulgarian\",\n          }\n        }\n\n        if ([\"MBulg\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"middle bulgarian\",\n          }\n        }\n\n        if ([\"Ukr\", \"Ukrainian\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"ukranian\",\n          }\n        }\n\n        if ([\"Pol\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"polish\",\n          }\n        }\n\n        if ([\"Belar\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"belarusian\",\n          }\n        }\n\n        break;\n\n      case \"tocharian\":\n        if (splitString[0] === \"A\") {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"tocharian A\",\n          }\n        }\n\n        if (splitString[0] === \"B\") {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"tocharian B\",\n          }\n        }\n\n        if ([\"AB\", \"A/B\"].includes(splitString[0])) {\n          languageAndWord = languageAndWord = {\n            ...defaultLanguageAndWord,\n            language: \"tocharian A/B\",\n          }\n        }\n\n        break;\n\n      default:\n        languageAndWord = {\n          language: language,\n          translation: splitString[0],\n          englishMeaning: getWordsInQuotes(dataString),\n        };\n\n        break;\n    }\n\n    return {\n      language: removeExtraChars(languageAndWord.language),\n      translation: removeExtraChars(languageAndWord.translation),\n      // translation: removeExtraChars(languageAndWord.translation).toLowerCase(),\n      englishMeaning: languageAndWord.englishMeaning,\n    };\n  }\n\n  return undefined;\n};\n\nexport default parseDataString;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}