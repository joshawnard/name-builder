{"ast":null,"code":"import _defineProperty from\"/Users/jard/Desktop/code/name-generator/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";var generateNames=function generateNames(formattedWordStructures){if(formattedWordStructures&&formattedWordStructures[0]){var generated=[];var structures=formattedWordStructures.flat();var numNames=1000;Array.from(Array(numNames)).forEach(function(time){var numOfRoots=Math.floor(Math.random()*structures.length);if(numOfRoots<2){numOfRoots=2;}if(numOfRoots>3){numOfRoots=3;}var nameKey=\"\";var rootsArr=[];for(var i=0;i<numOfRoots;i++){var randomStructureIndex=Math.floor(Math.random()*structures.length);var randomStructure=structures[randomStructureIndex];if(randomStructure){var translationList=Object.entries(randomStructure).map(function(entry){return entry[1].filter(function(element){return element!==undefined;});})[0];var randomTranslationIndex=Math.floor(Math.random()*(translationList.length-1));var translationObj=translationList[randomTranslationIndex];nameKey+=(translationObj===null||translationObj===void 0?void 0:translationObj.translation.replaceAll(/[$;,(?*-]/g,\"\"))||\"\";rootsArr.push(translationObj);}}var alreadyExists=!!generated.find(function(obj){return Object.keys(obj)[0]===nameKey;});if(!alreadyExists){generated.push(_defineProperty({},nameKey,rootsArr));}});return generated;}return[];};export default generateNames;","map":{"version":3,"names":["generateNames","formattedWordStructures","generated","structures","flat","numNames","Array","from","forEach","time","numOfRoots","Math","floor","random","length","nameKey","rootsArr","i","randomStructureIndex","randomStructure","translationList","Object","entries","map","entry","filter","element","undefined","randomTranslationIndex","translationObj","translation","replaceAll","push","alreadyExists","find","obj","keys"],"sources":["/Users/jard/Desktop/code/name-generator/src/utils/generateNames.ts"],"sourcesContent":["import { FormattedWordStructures, GeneratedName, ParsedRootInterface } from \"../interfaces/rootWordInterface\";\n\nconst generateNames = (\n  formattedWordStructures: FormattedWordStructures,\n): GeneratedName[] => {\n  if (formattedWordStructures && formattedWordStructures[0]) {\n    let generated: { [key: string]: ParsedRootInterface[] }[] = [];\n    const structures = formattedWordStructures.flat();\n\n    const numNames = 1000;\n    Array.from(Array(numNames)).forEach((time) => {\n      let numOfRoots = Math.floor(Math.random() * (structures.length));\n      if (numOfRoots < 2) {\n        numOfRoots = 2;\n      }\n      if (numOfRoots > 3) {\n        numOfRoots = 3;\n      }\n\n      let nameKey = \"\";\n      let rootsArr: ParsedRootInterface[] = [];\n\n      for (let i = 0; i < numOfRoots; i++) {\n        const randomStructureIndex = Math.floor(Math.random() * (structures.length));\n        const randomStructure = structures[randomStructureIndex];\n\n        if (randomStructure) {\n          const translationList = Object.entries(randomStructure).map((entry) => {\n            return entry[1].filter((element) => {\n              return element !== undefined;\n            });\n          })[0]\n\n          const randomTranslationIndex = Math.floor(Math.random() * (translationList.length - 1));\n          const translationObj = translationList[randomTranslationIndex];\n\n          nameKey += translationObj?.translation.replaceAll(/[$;,(?*-]/g, \"\") || \"\";\n          rootsArr.push(translationObj as ParsedRootInterface);\n        }\n      }\n\n      const alreadyExists = !!generated.find((obj) => Object.keys(obj)[0] === nameKey);\n      if (!alreadyExists) {\n        generated.push({\n          [nameKey]: rootsArr,\n        });\n      }\n    })\n\n    return generated;\n  }\n\n  return [];\n};\n\nexport default generateNames;"],"mappings":"+HAEA,GAAMA,cAAa,CAAG,QAAhBA,cAAa,CACjBC,uBAAgD,CAC5B,CACpB,GAAIA,uBAAuB,EAAIA,uBAAuB,CAAC,CAAC,CAAC,CAAE,CACzD,GAAIC,UAAqD,CAAG,EAAE,CAC9D,GAAMC,WAAU,CAAGF,uBAAuB,CAACG,IAAI,EAAE,CAEjD,GAAMC,SAAQ,CAAG,IAAI,CACrBC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACD,QAAQ,CAAC,CAAC,CAACG,OAAO,CAAC,SAACC,IAAI,CAAK,CAC5C,GAAIC,WAAU,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAIV,UAAU,CAACW,MAAO,CAAC,CAChE,GAAIJ,UAAU,CAAG,CAAC,CAAE,CAClBA,UAAU,CAAG,CAAC,CAChB,CACA,GAAIA,UAAU,CAAG,CAAC,CAAE,CAClBA,UAAU,CAAG,CAAC,CAChB,CAEA,GAAIK,QAAO,CAAG,EAAE,CAChB,GAAIC,SAA+B,CAAG,EAAE,CAExC,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGP,UAAU,CAAEO,CAAC,EAAE,CAAE,CACnC,GAAMC,qBAAoB,CAAGP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAIV,UAAU,CAACW,MAAO,CAAC,CAC5E,GAAMK,gBAAe,CAAGhB,UAAU,CAACe,oBAAoB,CAAC,CAExD,GAAIC,eAAe,CAAE,CACnB,GAAMC,gBAAe,CAAGC,MAAM,CAACC,OAAO,CAACH,eAAe,CAAC,CAACI,GAAG,CAAC,SAACC,KAAK,CAAK,CACrE,MAAOA,MAAK,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,SAACC,OAAO,CAAK,CAClC,MAAOA,QAAO,GAAKC,SAAS,CAC9B,CAAC,CAAC,CACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAEL,GAAMC,uBAAsB,CAAGjB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,EAAIO,eAAe,CAACN,MAAM,CAAG,CAAC,CAAC,CAAC,CACvF,GAAMe,eAAc,CAAGT,eAAe,CAACQ,sBAAsB,CAAC,CAE9Db,OAAO,EAAI,CAAAc,cAAc,SAAdA,cAAc,iBAAdA,cAAc,CAAEC,WAAW,CAACC,UAAU,CAAC,YAAY,CAAE,EAAE,CAAC,GAAI,EAAE,CACzEf,QAAQ,CAACgB,IAAI,CAACH,cAAc,CAAwB,CACtD,CACF,CAEA,GAAMI,cAAa,CAAG,CAAC,CAAC/B,SAAS,CAACgC,IAAI,CAAC,SAACC,GAAG,QAAKd,OAAM,CAACe,IAAI,CAACD,GAAG,CAAC,CAAC,CAAC,CAAC,GAAKpB,OAAO,GAAC,CAChF,GAAI,CAACkB,aAAa,CAAE,CAClB/B,SAAS,CAAC8B,IAAI,oBACXjB,OAAO,CAAGC,QAAQ,EACnB,CACJ,CACF,CAAC,CAAC,CAEF,MAAOd,UAAS,CAClB,CAEA,MAAO,EAAE,CACX,CAAC,CAED,cAAeF,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}