{"ast":null,"code":"var _jsxFileName = \"/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    settings,\n    setSelectedWords,\n    setSettings\n  } = useContext(NameGeneratorContext);\n  const handleShowFormattedWordsChange = e => {\n    const {\n      checked\n    } = e.currentTarget;\n    setSettings({\n      ...settings,\n      showFormattedWords: checked\n    });\n  };\n  const handleClearAll = () => {\n    setSelectedWords({});\n  };\n  const renderShowFormattedWordsSetting = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          checked: settings.showFormattedWords,\n          onChange: e => handleShowFormattedWordsChange(e),\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \"Show translation lists\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  const renderClearAll = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearAll,\n      style: {\n        textAlign: \"right\"\n      },\n      children: \"Clear all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), renderShowFormattedWordsSetting(), renderClearAll()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"2VJEeRLJUsQuUSTVJ4JQoAXdXhc=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useContext","NameGeneratorContext","Settings","settings","setSelectedWords","setSettings","handleShowFormattedWordsChange","e","checked","currentTarget","showFormattedWords","handleClearAll","renderShowFormattedWordsSetting","renderClearAll","textAlign","display","alignItems"],"sources":["/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx"],"sourcesContent":["import React, { ChangeEvent, useContext } from \"react\";\nimport NameGeneratorContext from \"../NameGeneratorContext\";\n\nconst Settings = () => {\n  const {\n    settings,\n    setSelectedWords,\n    setSettings,\n  } = useContext(NameGeneratorContext);\n\n  const handleShowFormattedWordsChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { checked } = e.currentTarget;\n\n    setSettings({\n      ...settings,\n      showFormattedWords: checked,\n    })\n  };\n\n  const handleClearAll = () => {\n    setSelectedWords({});\n  };\n\n  const renderShowFormattedWordsSetting = () => {\n    return (\n      <>\n        <label>\n          <input\n            checked={settings.showFormattedWords}\n            onChange={(e) => handleShowFormattedWordsChange(e)}\n            type=\"checkbox\"\n          />\n\n          Show translation lists\n        </label>\n      </>\n    );\n  };\n\n  const renderClearAll = () => {\n    return (\n      <button\n        onClick={handleClearAll}\n        style={{\n          textAlign: \"right\",\n        }}\n      >\n        Clear all\n      </button>\n    );\n  };\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\", }}>\n      <h2>Settings:</h2>\n\n      {renderShowFormattedWordsSetting()}\n      {renderClearAll()}\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAiBC,UAAU,QAAQ,OAAO;AACtD,OAAOC,oBAAoB,MAAM,yBAAyB;AAAC;AAAA;AAE3D,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM;IACJC,QAAQ;IACRC,gBAAgB;IAChBC;EACF,CAAC,GAAGL,UAAU,CAACC,oBAAoB,CAAC;EAEpC,MAAMK,8BAA8B,GAAIC,CAAgC,IAAK;IAC3E,MAAM;MAAEC;IAAQ,CAAC,GAAGD,CAAC,CAACE,aAAa;IAEnCJ,WAAW,CAAC;MACV,GAAGF,QAAQ;MACXO,kBAAkB,EAAEF;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,cAAc,GAAG,MAAM;IAC3BP,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMQ,+BAA+B,GAAG,MAAM;IAC5C,oBACE;MAAA,uBACE;QAAA,wBACE;UACE,OAAO,EAAET,QAAQ,CAACO,kBAAmB;UACrC,QAAQ,EAAGH,CAAC,IAAKD,8BAA8B,CAACC,CAAC,CAAE;UACnD,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QACf,0BAGJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAAQ,iBACP;EAEP,CAAC;EAED,MAAMM,cAAc,GAAG,MAAM;IAC3B,oBACE;MACE,OAAO,EAAEF,cAAe;MACxB,KAAK,EAAE;QACLG,SAAS,EAAE;MACb,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS;EAEb,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAU,CAAE;IAAA,wBACrD;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,EAEjBJ,+BAA+B,EAAE,EACjCC,cAAc,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAEV,CAAC;AAAC,GAzDIX,QAAQ;AAAA,KAARA,QAAQ;AA2Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}