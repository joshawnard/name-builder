[{"/Users/jard/Desktop/code/name-generator/src/index.tsx":"1","/Users/jard/Desktop/code/name-generator/src/reportWebVitals.ts":"2","/Users/jard/Desktop/code/name-generator/src/App.tsx":"3","/Users/jard/Desktop/code/name-generator/src/components/NameGenerator.tsx":"4","/Users/jard/Desktop/code/name-generator/src/NameGeneratorContext.tsx":"5","/Users/jard/Desktop/code/name-generator/src/components/WordSelectForm.tsx":"6","/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx":"7","/Users/jard/Desktop/code/name-generator/src/root_words/rootWords.ts":"8","/Users/jard/Desktop/code/name-generator/src/utils/formatSelectedWords.ts":"9","/Users/jard/Desktop/code/name-generator/src/utils/parseDataString.ts":"10","/Users/jard/Desktop/code/name-generator/src/utils/getWordsInQuotes.ts":"11","/Users/jard/Desktop/code/name-generator/src/utils/renderFormattedWords.tsx":"12","/Users/jard/Desktop/code/name-generator/src/utils/renderGeneratedNames.tsx":"13","/Users/jard/Desktop/code/name-generator/src/utils/generateNames.ts":"14","/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx":"15","/Users/jard/Desktop/code/name-generator/src/utils/removeExtraChars.ts":"16","/Users/jard/Desktop/code/name-generator/src/utils/parseEnglishString.ts":"17","/Users/jard/Desktop/code/name-builder/src/index.tsx":"18","/Users/jard/Desktop/code/name-builder/src/reportWebVitals.ts":"19","/Users/jard/Desktop/code/name-builder/src/App.tsx":"20","/Users/jard/Desktop/code/name-builder/src/components/NameGenerator.tsx":"21","/Users/jard/Desktop/code/name-builder/src/NameGeneratorContext.tsx":"22","/Users/jard/Desktop/code/name-builder/src/components/WordSelectForm.tsx":"23","/Users/jard/Desktop/code/name-builder/src/components/Settings.tsx":"24","/Users/jard/Desktop/code/name-builder/src/utils/parseEnglishString.ts":"25","/Users/jard/Desktop/code/name-builder/src/root_words/rootWords.ts":"26","/Users/jard/Desktop/code/name-builder/src/components/GeneratorOutput.tsx":"27","/Users/jard/Desktop/code/name-builder/src/utils/formatSelectedWords.ts":"28","/Users/jard/Desktop/code/name-builder/src/utils/removeExtraChars.ts":"29","/Users/jard/Desktop/code/name-builder/src/utils/generateNames.ts":"30","/Users/jard/Desktop/code/name-builder/src/utils/renderFormattedWords.tsx":"31","/Users/jard/Desktop/code/name-builder/src/utils/renderGeneratedNames.tsx":"32","/Users/jard/Desktop/code/name-builder/src/utils/parseDataString.ts":"33","/Users/jard/Desktop/code/name-builder/src/utils/getWordsInQuotes.ts":"34"},{"size":554,"mtime":1672877197905,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1672877197907,"results":"37","hashOfConfig":"36"},{"size":310,"mtime":1673397028732,"results":"38","hashOfConfig":"36"},{"size":1829,"mtime":1673484860158,"results":"39","hashOfConfig":"36"},{"size":734,"mtime":1673399272899,"results":"40","hashOfConfig":"36"},{"size":2332,"mtime":1673485164376,"results":"41","hashOfConfig":"36"},{"size":1694,"mtime":1673469485679,"results":"42","hashOfConfig":"36"},{"size":230300,"mtime":1673486270145,"results":"43","hashOfConfig":"36"},{"size":1568,"mtime":1673464757162,"results":"44","hashOfConfig":"36"},{"size":13525,"mtime":1673469699136,"results":"45","hashOfConfig":"36"},{"size":182,"mtime":1673401369650,"results":"46","hashOfConfig":"36"},{"size":2079,"mtime":1673399914841,"results":"47","hashOfConfig":"36"},{"size":1787,"mtime":1673404035450,"results":"48","hashOfConfig":"36"},{"size":1866,"mtime":1673449000056,"results":"49","hashOfConfig":"36"},{"size":1276,"mtime":1673485550718,"results":"50","hashOfConfig":"36"},{"size":124,"mtime":1673484376445,"results":"51","hashOfConfig":"36"},{"size":498,"mtime":1673484690123,"results":"52","hashOfConfig":"36"},{"size":554,"mtime":1672877197905,"results":"53","hashOfConfig":"54"},{"size":425,"mtime":1672877197907,"results":"55","hashOfConfig":"54"},{"size":310,"mtime":1673397028732,"results":"56","hashOfConfig":"54"},{"size":1829,"mtime":1673484860158,"results":"57","hashOfConfig":"54"},{"size":734,"mtime":1673399272899,"results":"58","hashOfConfig":"54"},{"size":2332,"mtime":1673485164376,"results":"59","hashOfConfig":"54"},{"size":1276,"mtime":1673485550718,"results":"60","hashOfConfig":"54"},{"size":498,"mtime":1673484690123,"results":"61","hashOfConfig":"54"},{"size":230300,"mtime":1673486270145,"results":"62","hashOfConfig":"54"},{"size":1694,"mtime":1673469485679,"results":"63","hashOfConfig":"54"},{"size":1568,"mtime":1673464757162,"results":"64","hashOfConfig":"54"},{"size":124,"mtime":1673484376445,"results":"65","hashOfConfig":"54"},{"size":1866,"mtime":1673449000056,"results":"66","hashOfConfig":"54"},{"size":2079,"mtime":1673399914841,"results":"67","hashOfConfig":"54"},{"size":1787,"mtime":1673404035450,"results":"68","hashOfConfig":"54"},{"size":13525,"mtime":1673469699136,"results":"69","hashOfConfig":"54"},{"size":182,"mtime":1673401369650,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uznozz",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d84gfc",{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jard/Desktop/code/name-generator/src/index.tsx",[],[],"/Users/jard/Desktop/code/name-generator/src/reportWebVitals.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/App.tsx",[],[],"/Users/jard/Desktop/code/name-generator/src/components/NameGenerator.tsx",["176"],[],"/Users/jard/Desktop/code/name-generator/src/NameGeneratorContext.tsx",[],[],"/Users/jard/Desktop/code/name-generator/src/components/WordSelectForm.tsx",["177"],[],"/Users/jard/Desktop/code/name-generator/src/components/GeneratorOutput.tsx",[],[],"/Users/jard/Desktop/code/name-generator/src/root_words/rootWords.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/formatSelectedWords.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/parseDataString.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/getWordsInQuotes.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/renderFormattedWords.tsx",["178","179","180"],[],"/Users/jard/Desktop/code/name-generator/src/utils/renderGeneratedNames.tsx",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/generateNames.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/components/Settings.tsx",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/removeExtraChars.ts",[],[],"/Users/jard/Desktop/code/name-generator/src/utils/parseEnglishString.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/index.tsx",[],[],"/Users/jard/Desktop/code/name-builder/src/reportWebVitals.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/App.tsx",[],[],"/Users/jard/Desktop/code/name-builder/src/components/NameGenerator.tsx",["181"],[],"import React, { useState } from 'react';\n\nimport NameGeneratorContext, { NameGeneratorContextInterface } from \"../NameGeneratorContext\";\n\nimport WordSelectForm from \"./WordSelectForm\";\n\nimport { SelectedWordsInterface } from \"../types/selectedWords\";\nimport GeneratorOutput from \"./GeneratorOutput\";\nimport rootWordsObj from \"../root_words/rootWords\";\nimport { EngWordsInterface } from \"../interfaces/rootWordInterface\";\nimport { SettingsInterface } from \"../interfaces/settingsInterfaces\";\nimport Settings from \"./Settings\";\nimport parseEnglishString from \"../utils/parseEnglishString\";\n\nconst engWordsArr = Object.keys(rootWordsObj).map((category) => {\n  return {\n    [category]: rootWordsObj[category].map((rootWordObj) => {\n      return parseEnglishString(rootWordObj.english);\n    })\n  }\n});\n\n// TODO: features\n// min roots for construction\n// max roots for construction\n\nconst NameGenerator = () => {\n  const [selectedWords, setSelectedWords] = useState<SelectedWordsInterface>({});\n  const [engWords, setEngWords] = useState<EngWordsInterface[]>(\n    engWordsArr,\n  );\n  const [settings, setSettings] = useState<SettingsInterface>({\n    showFormattedWords: true,\n  })\n\n  const setNameGeneratorContext = (): NameGeneratorContextInterface => {\n    return {\n      engWords,\n      rootWordsObj,\n      selectedWords,\n      setSelectedWords,\n      settings,\n      setSettings,\n    };\n  };\n\n  return (\n    <NameGeneratorContext.Provider value={setNameGeneratorContext()}>\n      <div className=\"settings\">\n        <Settings />\n      </div>\n\n      <div className=\"page-wrapper\">\n        <div className=\"word-select\">\n          <WordSelectForm />\n        </div>\n\n        <div className=\"generated\">\n          <GeneratorOutput />\n        </div>\n      </div>\n    </NameGeneratorContext.Provider>\n  );\n};\n\nexport default NameGenerator;","/Users/jard/Desktop/code/name-builder/src/NameGeneratorContext.tsx",[],[],"/Users/jard/Desktop/code/name-builder/src/components/WordSelectForm.tsx",["182"],[],"import React, { ChangeEvent, useContext } from 'react';\nimport NameGeneratorContext from \"../NameGeneratorContext\";\nimport rootWordsObj from \"../root_words/rootWords\";\n\nconst WordSelectForm = (): JSX.Element => {\n  const { engWords, selectedWords, setSelectedWords } = useContext(NameGeneratorContext);\n  const flattenedSelectedWordList = Object.values(selectedWords).flat();\n\n  const handleCheck = (e: ChangeEvent<HTMLInputElement>, type: string, word: string) => {\n    const { currentTarget: { checked } } = e;\n\n    if (checked && selectedWords[type]) {\n      setSelectedWords({\n        ...selectedWords,\n        [type]: [\n          ...selectedWords[type],\n          word,\n        ],\n      });\n    } else if (checked) {\n      setSelectedWords({\n        ...selectedWords,\n        [type]: [\n          word,\n        ],\n      });\n    } else {\n      let words = selectedWords[type]\n      const index = words.indexOf(word, 0);\n\n      if (index > -1) {\n         words.splice(index, 1);\n      }\n\n      setSelectedWords({\n        ...selectedWords,\n        [type]: [...words],\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        {\n          engWords.map((engWordCategory) => {\n            return Object.entries(engWordCategory).map((foo) => {\n              const [category, wordObjArr] = foo;\n\n              return (\n                <div key={category}>\n                  <h3>{category}</h3>\n\n                  {\n                    wordObjArr.map((word, index) => {\n                      if (word) {\n                        return (\n                          <div key={`word-${index}`}>\n                            <label>\n                              <input\n                                checked={flattenedSelectedWordList.includes(word)}\n                                name={word}\n                                onChange={(e) => handleCheck(e, category, word)}\n                                type=\"checkbox\"\n                              />\n\n                              {word}\n                            </label>\n                          </div>\n                        );\n                      }\n\n                      return null;\n                    })\n                  }\n                </div>\n              );\n            })\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default WordSelectForm;","/Users/jard/Desktop/code/name-builder/src/components/Settings.tsx",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/parseEnglishString.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/root_words/rootWords.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/components/GeneratorOutput.tsx",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/formatSelectedWords.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/removeExtraChars.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/generateNames.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/renderFormattedWords.tsx",["183","184","185"],[],"import React from \"react\";\nimport { FormattedWordStructures } from \"../interfaces/rootWordInterface\";\n\nconst renderFormattedWords = (\n  formattedWordStructures: FormattedWordStructures,\n): JSX.Element | null => {\n  if (formattedWordStructures) {\n    return (\n      <>\n        {\n          formattedWordStructures.map((formattedWord) => {\n            if (formattedWord) {\n              return formattedWord.map((word) => {\n                if (word) {\n                  return Object.entries(word).map((list) => {\n                    const englishWord = list[0];\n\n                    // TODO: table format?\n                    return (\n                      <div\n                        className=\"formatted-word\"\n                        key={englishWord}\n                      >\n                        <h4>\n                          {englishWord}\n                        </h4>\n\n                        {\n                          list[1].map((wordObj) => {\n                            if (wordObj) {\n                              const { language, translation, englishMeaning } = wordObj;\n\n                              return (\n                                <div key={`${translation}-${language}`}>\n                                  <strong>\n                                    {translation}:\n                                  </strong>\n                                  {' '}\n                                  <span>\n                                    {language}\n                                  </span>\n                                  {' - '}\n                                  <em>\n                                    {englishMeaning || englishWord}\n                                  </em>\n                                </div>\n                              );\n                            }\n                          })\n                        }\n                      </div>\n                    );\n                  });\n                }\n              });\n            }\n          })\n        }\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default renderFormattedWords;","/Users/jard/Desktop/code/name-builder/src/utils/renderGeneratedNames.tsx",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/parseDataString.ts",[],[],"/Users/jard/Desktop/code/name-builder/src/utils/getWordsInQuotes.ts",[],[],{"ruleId":"186","severity":1,"message":"187","line":29,"column":20,"nodeType":"188","messageId":"189","endLine":29,"endColumn":31},{"ruleId":"186","severity":1,"message":"190","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":11,"column":55,"nodeType":"193","messageId":"194","endLine":11,"endColumn":57},{"ruleId":"191","severity":1,"message":"192","line":13,"column":47,"nodeType":"193","messageId":"194","endLine":13,"endColumn":49},{"ruleId":"191","severity":1,"message":"192","line":29,"column":49,"nodeType":"193","messageId":"194","endLine":29,"endColumn":51},{"ruleId":"186","severity":1,"message":"187","line":29,"column":20,"nodeType":"188","messageId":"189","endLine":29,"endColumn":31},{"ruleId":"186","severity":1,"message":"190","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":20},{"ruleId":"191","severity":1,"message":"192","line":11,"column":55,"nodeType":"193","messageId":"194","endLine":11,"endColumn":57},{"ruleId":"191","severity":1,"message":"192","line":13,"column":47,"nodeType":"193","messageId":"194","endLine":13,"endColumn":49},{"ruleId":"191","severity":1,"message":"192","line":29,"column":49,"nodeType":"193","messageId":"194","endLine":29,"endColumn":51},"@typescript-eslint/no-unused-vars","'setEngWords' is assigned a value but never used.","Identifier","unusedVar","'rootWordsObj' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]